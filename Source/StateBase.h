#pragma once
#include <vector>
#include <memory>
//class EnemySlime;
//class Player;
class Actor;


class State
{
public:
	// コンストラクタ
	State(std::weak_ptr<Actor> actor) :owner(actor) {}
	virtual ~State() {}
	// 全て継承先で実装させる必要があるため純粋仮想関数で実装
	// ステートに入った時のメソッド
	virtual void Enter() = 0;
	// ステートで実行するメソッド
	virtual void Execute(float elapsedTime) = 0;
	// ステートから出ていくときのメソッド
	virtual void Exit() = 0;

	virtual void End() = 0;


protected:
	std::weak_ptr<Actor> owner;
};
